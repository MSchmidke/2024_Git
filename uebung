if [ -f .git/REBASE_HEAD ]; then
  git rebase --abort
fi

git checkout -f main
git reset --hard
git clean -fdx
for q in `git for-each-ref '**/uebung_*' --format="%(refname)"`; do git update-ref -d ${q}; done

if [ "$1" = "stop" ]; then
  exit 0;
fi

a=$1

sub() {
  for q in `git log -1 $1 | grep -o '$t/'${a}'.*' | sed 's|$t/|uebung_|'`; do git tag ${q} $1; done
  for q in `git log -1 $1 | grep -o '$b/'${a}'.*' | sed 's|$b/|uebung_|'`; do git branch ${q} $1; done
}

for s in `git log $(git for-each-ref --format="%(objectname)" '**/origin/*') --grep "\$./${a}" --format="%h"`; do sub $s; done

git checkout uebung_$a

echo
echo
echo ===========================================================
echo =============== Ãœbung $a ==================================
echo ===========================================================


eval `dirname "$0"`/lg
echo
echo ============== Die Aufgabe ================================

git show origin/aufgabentexte:uebung_$a.txt